//- pug mixins

mixin fa( $icon, $prefix, $option )
  -
    const style = $prefix || "fas"
    const option = $option || {}
    const query = { prefix: style, iconName: $icon }
    let fahtml = ''
    const insertlater = falibs.icons.find(el => el.prefix == style && el.iconName == $icon)
  if(insertlater && !isAmp)
    i(class=`fa ${style} ${$icon}` data-fa-prefix=style data-fa-icon-name=$icon data-fa-option=(JSON.stringify(option).replace(/\"/g,"'")))
  else
    -
      try {
        fahtml = fontawesome.icon(query, option).html[0]
      } catch(e2) {
        console.log(`Can't pick up icon: ${$icon}, ${style}`) 
      }
    | !{fahtml}

mixin fa_fw( $icon, $prefix )
  +fa( $icon, $prefix, {classes: ['fa-fw']})

mixin toc( headings, n, tag, cl)
  -
    function lv(a, b, ht){
      let r = a - b
      for(let j=0; r > j; j++){
        o += ht
      }
    }
    let o = `<${tag} class="${cl} m-0 p-0">`
    for(let i = 0; headings.length > i; i++){
      let now = headings[i], prev
      if (now.number < n)
        continue
      if (i == 0)
        prev = {number: n}
      else
        prev = headings[i - 1]
      if ( i == 0 || now.number > prev.number )
        lv(now.number, prev.number, `<${tag} class="${cl}">`)
      else if ( now.number < prev.number )
        lv(prev.number, now.number, `</${tag}>`)
      o += `<li><a href="#${now.id}">${now.text}</a></li>`
    }
    o += `</${tag}>`
  != o

mixin lis_of_dir(pathf, $option)
  -
    function pathMFilter(pathf){
      return pages.filter(function(e,i,a){
        if( typeof pathf === "string" ){
          return e.meta.permalink.indexOf(`${pathf}`) == 0 && e.meta.permalink.replace(`${pathf}`, "") != "" && e.meta.permalink.split('/').length == pathf.split('/').length + 1
        } else if (typeof pathf === "object" && Array.isArray(pathf) ){
          for( c = 0; c < pathf.length; c++ ){
            if( e.meta.permalink.indexOf(`${pathf[c]}`) == 0 && e.meta.permalink.replace(`${pathf[c]}`, "") != "" && e.meta.permalink.split('/').length == pathf.split('/').length + 1) return true
          }
        }
      })
    }
    let bpages = pathMFilter(pathf)
    bpages.sort( (a, b) => { return ( a.meta.permalink > b.meta.permalink ) ? 1 : -1 } )
    bpages.sort( (a, b) => a.attributes.rank - b.attributes.rank )
  each rpage in bpages
    li.mb-1
      a.d-block(href=`${site.url.path}${rpage.meta.permalink}`)
        div=rpage.attributes.title
        div.small.lh-12=rpage.attributes.description
      if($option.s == true && rpage.attributes.has_child == true)
        ul.mt-1(clas=`${$option.unstyled ? 'list-unstyled' : ''}`)
          +lis_of_dir(rpage.meta.permalink, {s: true})

mixin embed_video(url)
  .embed-responsive.embed-responsive-16by9.video-embed
    iframe(src=url,allowfullscreen="allowfullscreen",frameborder="0",gesture="media",allow="encrypted-media").embed-responsive-item
mixin embed_nicovideo(vid)
  +embed_video(`https://embed.nicovideo.jp/watch/${vid}`)
mixin embed_youtube(vid)
  +embed_video(`https://www.youtube.com/embed/${vid}?controls=2&modestbranding=1&rel=0`)
mixin embed_youtube_autoplay(vid)
  +embed_video(`https://www.youtube.com/embed/${vid}?autoplay=1&controls=2&modestbranding=1&rel=0`)

//- https://developers.google.com/youtube/player_parameters?hl=ja

mixin i18n(target, strs)
  | #{i18n(target, strs)}

mixin blog_badges(targetpage)
  div.mr-2
    +fa_fw("folder-open")
    if(targetpage.attributes.categories)
      each category in targetpage.attributes.categories
        span.badge.badge-success.md-small= category
        |  
    else
      +i18n('null')
  div.mr-2
    +fa_fw("tags")
    if(targetpage.attributes.tags)
      each tag in targetpage.attributes.tags
        span.badge.badge-secondary.md-small= tag
        |  
    else
      +i18n('null')

mixin mfm_example(src)
  .bg-light
    .mk-mfm-example.p-2
      p.m-0.p-0.small.font-weight-bold Text
      textarea.mb-2.bg-white(rows=(src.split('\n').length - 1) readonly)!=src
      p.m-0.p-0.small.font-weight-bold Preview
      .mk-note.bg-white!=mfmf.render(mfmf.parse(src), [], {jmstyle: true, url: '?', animate: true, codeTagAsDiv: false, faJm: true})

mixin instancesList(o, colors, sctrollts)
  .instances-list.list-group(class=(scrollts ? `scrollts scrollts-${scrollts}` : ''))
    -
      let c = colors ? `text-${colors[0]} bg-${colors[2]}` : 'text-black'
      let c2 = colors ? `text-${colors[1]}` : 'text-muted'
      let lgrgb = colors && colors[3] == 'dark' ? '52, 58, 64' : '255, 255, 255'
      let num = 0
    each instance, r in instancesInfos
      -
        const iregi = instance.notSuspended || (instance.isAlive && (instance.meta.features ? instance.meta.features.registration : !instance.meta.disableRegistration))
        const alive = !instance.suspended && (instance.notSuspended || instance.isAlive)
        const ilang = instance.langs ? instance.langs.some(e => e == locale) : true
        if(alive && iregi && ilang) num += 1
        let itype = true
        switch(o){
          case 'selected':
            itype = alive && iregi && num < 7
            break
          case 'nonselected':
            itype = alive && iregi && num >= 7
            break
          case 'registration-open':
            itype = alive && iregi
            break
          case 'suspended':
            itype = !alive
            break
          case 'registration-closed':
            itype = alive && !iregi
            break
        }
      if(ilang && itype)
        - let s = instance.isAlive && instance.meta.bannerUrl ? `background: linear-gradient(rgb(${lgrgb}, .6), rgba(${lgrgb}, .9)), url('${instance.meta.bannerUrl}'); background-size: cover; background-clip: padding-box; background-position: center;` : ''
        a(href=`https://${instance.url}` target="_blank" rel="noopener" class=c style=s data-instance-value=instance.value).instance.list-group-item.list-group-item-action.flex-column.align-items-start
          h4.jm-h4.noindex
            | #{instance.name || (instance.isAlive && instance.meta.name && instance.meta.name != 'Misskey' && instance.meta.name != instance.url) ? `${instance.name || instance.meta.name}<span class="${c2} font-weight-normal"> - ${instance.url}</span>` : instance.url}
          if(instance.isAlive && instance.description)
            p.my-1.lh-12
              | #{(instance.description.slice(0, 70) || '')}#{instance.description.length > 70 ? 'â€¦' : ''}

          if(instance.isAlive)
            .instance-infos.d-flex.flex-wrap.small(class=c2)
              if(!iregi)
                abbr(title=i18n('instance_registrationDisabled'))
                  +fa_fw('lock')
              else
                abbr(title=i18n('instance_registrationEnabled'))
                  +fa_fw('lock-open')
              if(instance.meta.features)
                if( !instance.meta.features.localTimeLine )
                  abbr(title=i18n('instance_localTimeLineDisabled')).opacity-050
                    +fa_fw('comments')
                else
                  abbr(title=i18n('instance_localTimeLineEnabled'))
                    +fa_fw('comments')
                if( instance.meta.features.elasticsearch )
                  abbr(title=i18n('instance_elasticsearchEnabled'))
                    +fa_fw('search')
                else
                  abbr(title=i18n('instance_elasticsearchDisabled')).opacity-050
                    +fa_fw('search')
                if( instance.meta.features.recaptcha )
                  abbr(title=i18n('instance_recaptchaEnabled'))
                    +fa_fw('shield-alt')
                else
                  abbr(title=i18n('instance_recaptchaDisabled')).opacity-050
                    +fa_fw('shield-alt')
                if( instance.meta.features.objectStorage )
                  abbr(title=i18n('instance_objectStorageEnabled'))
                    +fa_fw('cube')
                else
                  abbr(title=i18n('instance_objectStorageDisabled')).opacity-050
                    +fa_fw('cube')
                each service in mkConnectServices
                  if( instance.meta.features[service.toLowerCase()] )
                    abbr(title=i18n('instance_serviceConnectionEnabled', [service]))
                      +fa_fw(service.toLowerCase(), 'fab')
                  else
                    abbr(title=i18n('instance_serviceConnectionDisabled', [service])).opacity-050
                      +fa_fw(service.toLowerCase(), 'fab')
                if( !semver.satisfies(semver.valid(semver.coerce(instance.meta.version)), ">=10.48.0") )
                  if( instance.meta.features.serviceWorker )
                    abbr(title=i18n('instance_serviceWorkerEnabled'))
                      +fa_fw('bell')
                  else
                    abbr(title=i18n('instance_serviceWorkerDisabled')).opacity-050
                      +fa_fw('bell')
              if( instance.meta.enableEmail )
                abbr(title=i18n('instance_serviceConnectionEnabled', [i18n('email')]))
                  +fa_fw('envelope-square')
              else
                abbr(title=i18n('instance_serviceConnectionDisabled', [i18n('email')])).opacity-050
                  +fa_fw('envelope-square')
            .instance-infos.d-flex.flex-wrap.small(class=c2)
              if(instance.stats.originalUsersCount)
                - const users = instance.stats.originalUsersCount
                .instance-infos-item.mr-2
                  abbr(title=i18n('instance_users'))
                    +fa_fw('users')
                  |  #{numeral(users).format(users >= 10000 ? '0.0a' : '0,0')}
              if(instance.stats.originalNotesCount)
                - const notes = instance.stats.originalNotesCount
                .instance-infos-item.mr-2
                  abbr(title=i18n('instance_notes'))
                    +fa_fw('pencil-alt')
                  |  #{numeral(notes).format(notes >= 10000 ? '0.0a' : '0,0')}
              if(instance.meta.maxNoteTextLength)
                .instance-infos-item.mr-2
                  abbr(title=i18n('instance_maxNoteTextLength'))
                    +fa_fw('i-cursor')
                  |  #{instance.meta.maxNoteTextLength}
              if(instance.meta.driveCapacityPerLocalUserMb)
                .instance-infos-item.mr-2
                  abbr(title=i18n('instance_driveCapacityPerLocalUser'))
                    +fa_fw('hdd')
                  |  #{numeral(instance.meta.driveCapacityPerLocalUserMb + 'MB').format('0.0b')}
              if(instance.meta.version)
                .instance-infos-item.mr-2 v#{instance.meta.version}
              if(instance.meta.maintainer)
                .instance-infos-item
                  abbr(title=i18n('instance_maintainer'))
                    +fa_fw('user-cog')
                  |  #{instance.meta.maintainer.name}
          else if(instance.notSuspended)
            .instance-infos.d-flex.flex-wrap.small(class=c2)
              +i18n('instance_notSuspended')

    else
      +i18n('none')
